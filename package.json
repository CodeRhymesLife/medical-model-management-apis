{
  "name": "medical-model-manager-apis",
  "version": "1.0.0",
  "description": "APIs for managing medical models",
  "repository": {
    "type": "git",
    "url": "https://github.com/drryanjames/medical-model-management-apis.git"
  },
  "author": "Ryan James <rcjames1004@gmail.com>",
  "license": "none",
  "private": true,
  "engines": {
    "node": ">=10.4.1",
    "npm": ">=6.1.0",
    "yarn": ">=1.9.4"
  },
  "scripts": {
    "start": "yarn deploy:dev",
    "docs": "./node_modules/.bin/typedoc --theme markdown --mode file --readme none --name 'Medical Model Management APIs' --out docs/ src/",
    "lint": "yarn local:lint",
    "setup": "yarn && yarn setup:settings && yarn download:blender",
    "test": "yarn deploy:test",
    "deploy:build": "yarn local:build && sudo docker-compose build --force-rm apis",
    "deploy:dev": "yarn deploy:build && sudo docker-compose -f docker-compose.yml -f docker-compose.dev.yml up",
    "deploy:mongo": "sudo docker-compose -f docker-compose.mongo.yml run mongo",
    "deploy:prod": "yarn deploy:build && sudo docker-compose up",
    "deploy:test": "yarn deploy:build && sudo docker-compose -f docker-compose.yml -f docker-compose.test.yml run apis",
    "deploy:travis": "yarn deploy:build && sudo docker-compose -f docker-compose.yml -f docker-compose.test.yml -f docker-compose.travis.yml run apis",
    "download:blender": "sudo wget -N -P ./.bin/blender/ http://download.blender.org/release/Blender2.79/blender-2.79-linux-glibc219-x86_64.tar.bz2",
    "local:dev:start": "yarn local:build && cross-env NODE_ENV=development nodemon build/index.js",
    "local:build": "yarn local:lint && yarn local:build-ts",
    "local:build-ts": "rimraf build && tsc && ./node_modules/.bin/copyfiles -u 1 src/config/settings.json src/**/*.py build",
    "local:lint": "tslint -c tslint.json -p tsconfig.json",
    "local:prod:start": "yarn local:build && cross-env NODE_ENV=production pm2 start build --name medical-model-manager-apis && pm2 logs medical-model-manager-apis",
    "local:prod:stop": "pm2 delete medical-model-manager-apis",
    "local:report-coverage": "coveralls < ./coverage/lcov.info",
    "local:test": "cross-env PORT=3000 NODE_ENV=test MONGO_HOST=mongodb://mongo:27017/medmod-test ./node_modules/.bin/mocha \"build/**/*.test.js\" --recursive --timeout 20000 --exit",
    "local:test:coverage": "./node_modules/.bin/nyc yarn local:test",
    "local:test:coverage:report": "./node_modules/.bin/nyc report --reporter=text-lcov | ./node_modules/.bin/coveralls",
    "local:test-ts-mocha": "cross-env PORT=3000 NODE_ENV=test MONGO_HOST=mongodb://mongo:27017/medmod-test ./node_modules/.bin/ts-mocha \"src/**/*.test.ts\" --timeout 20000 --exit",
    "precommit": "yarn lint && yarn test",
    "setup:settings": "cp -n ./src/config/settings.example.json ./src/config/settings.json && cp -n .env.example .env && echo 'Update src/config/settings.json and .env with your environment specific values!!!!!!'"
  },
  "keywords": [
    "express",
    "node",
    "node.js",
    "mongodb",
    "mongoose",
    "es6",
    "mocha",
    "university of washington",
    "UW",
    "REST",
    "API",
    "medical",
    "model",
    "management",
    "typescript"
  ],
  "dependencies": {
    "app-root-path": "^2.1.0",
    "bluebird": "3.5.1",
    "body-parser": "1.18.2",
    "child_process": "^1.0.2",
    "compression": "1.7.2",
    "cookie-parser": "1.4.3",
    "cors": "2.8.4",
    "debug": "^2.4.5",
    "dotenv": "^4.0.0",
    "express": "4.16.3",
    "express-jwt": "5.3.1",
    "express-request-id": "^1.4.0",
    "express-session": "^1.15.6",
    "express-validation": "1.0.2",
    "express-winston": "^3.0.0",
    "fs-extra": "^7.0.0",
    "glob": "^7.1.2",
    "google-auth-library": "^1.6.1",
    "gridfs-stream": "^1.1.1",
    "helmet": "3.12.0",
    "http-status": "^1.2.0",
    "joi": "^13.5.2",
    "kue": "^0.11.6",
    "load-json-file": "^5.0.0",
    "method-override": "^2.3.10",
    "mongoose": "^5.2.6",
    "morgan": "1.9.0",
    "multer": "^1.3.1",
    "nodemon": "^1.18.3",
    "pm2": "^2.10.4",
    "pretty-error": "^2.1.1",
    "reflect-metadata": "^0.1.12",
    "request-context": "^2.0.0",
    "rimraf": "^2.6.2",
    "streamifier": "^0.1.1",
    "tempy": "^0.2.1",
    "typegoose": "^5.2.1",
    "validator": "^10.5.0",
    "winston": "^3.0.0",
    "winston-context": "^0.0.7"
  },
  "devDependencies": {
    "@types/async": "^2.0.49",
    "@types/bluebird": "^3.5.23",
    "@types/body-parser": "^1.17.0",
    "@types/chai": "^4.1.4",
    "@types/compression": "^0.0.36",
    "@types/cookie-parser": "^1.4.1",
    "@types/cors": "^2.8.4",
    "@types/dotenv": "^4.0.3",
    "@types/express": "^4.16.0",
    "@types/express-session": "^1.15.10",
    "@types/express-winston": "^2.4.4",
    "@types/fs-extra": "^5.0.4",
    "@types/glob": "^5.0.35",
    "@types/gridfs-stream": "^0.5.30",
    "@types/helmet": "^0.0.38",
    "@types/http-status": "^0.2.30",
    "@types/joi": "^13.4.0",
    "@types/kue": "^0.11.9",
    "@types/load-json-file": "^2.0.7",
    "@types/method-override": "^0.0.31",
    "@types/mocha": "^5.2.5",
    "@types/mongodb": "^3.1.3",
    "@types/mongoose": "^5.2.3",
    "@types/morgan": "^1.7.35",
    "@types/multer": "^1.3.7",
    "@types/node": "^10.5.6",
    "@types/passport": "^0.4.6",
    "@types/request": "^2.47.1",
    "@types/rimraf": "^2.0.2",
    "@types/supertest": "^2.0.5",
    "@types/tempy": "^0.1.0",
    "@types/validator": "^9.4.1",
    "@types/winston": "^2.4.4",
    "chai": "4.1.2",
    "copyfiles": "^2.0.0",
    "coveralls": "^3.0.2",
    "cross-env": "5.1.4",
    "husky": "0.14.3",
    "istanbul": "1.1.0-alpha.1",
    "mocha": "^5.2.0",
    "nyc": "^12.0.2",
    "supertest": "^3.1.0",
    "ts-mocha": "^2.0.0",
    "ts-node": "^7.0.0",
    "tsconfig-paths": "^3.5.0",
    "tslint": "^5.11.0",
    "typedoc": "^0.12.0",
    "typedoc-plugin-markdown": "^1.1.13",
    "typescript": "^3.0.1"
  }
}
